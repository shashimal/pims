<?php

/**
 * UniqueIdGenerator
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    pims
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class UniqueIdGenerator extends BaseUniqueIdGenerator {

    const MIN_LENGTH =3;

    private $entityTable;

    /**
     * Set the entity
     * @param $entity
     * @return unknown_type
     */
    public function setEntityTable($entityTable) {

        $this->entityTable = $entityTable;
    }

    /**
     * Get the entity
     * @param $entity
     * @return unknown_type
     */
    public function getEntityTable() {

        return $this->entityTable;
    }

    /**
     * get the prefix
     * @return unknown_type
     */
    private function getEntityPrefix() {

        $prefix = '';

        switch ($this->getEntityTable()) {

            case 'UserGroup' :
                $prefix = 'USG';
                break;

            case 'User' :
                $prefix = 'USR';
                break;

            case 'StdInputCategory' :
                $prefix = 'SIC';
                break;

            case 'StdInput' :
                $prefix = 'INC';
                break;

            case 'StdInputResult' :
                $prefix = 'INR';
                break;

            case 'PatientCategory' :
                $prefix = 'PAC';
                break;
        }

        return $prefix;
    }

    /**
     * Get next auto increment ID
     * @param bool update - Update id in the database - defaults to true.     *
     * @return next auto increment ID
     */
    public function getNextID($update = true) {

        $prefix = $this->getEntityPrefix();

        $currentId = $this->getCurrentID();

        if ($update) {
            $this->updateNextId($currentId +1);
        }
        $nextId = $prefix .str_pad($currentId +1, self::MIN_LENGTH, "0", STR_PAD_LEFT);

        return $nextId;

    }

    /**
     * Get Current ID
     */
    public function getCurrentID() {

        $tableName = Doctrine::getTable($this->getEntityTable())->getTableName();

        $q = Doctrine_Query::create()->select('*')->from('UniqueIdGenerator u')->where('u.tbl = ?', $tableName);

        $uniqueId = $q->fetchOne();

        return $uniqueId->getLastId();
    }

    /**
     * Update next ID
     * @param int $nextId
     */
    private function updateNextId($nextId) {

        try {

            $tableName = Doctrine::getTable($this->getEntityTable())->getTableName();

            $q = Doctrine_Query::create()
                    ->update('UniqueIdGenerator')
                    ->set("last_id", "'" .$nextId ."'")
                    ->where('tbl = ' ."'$tableName'");

            $q->execute();

        } catch (Exception $e) {

        }
    }

}
