<?php

/**
 * StdInputResult
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    pims
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class StdInputResult extends BaseStdInputResult {

    /**
     * Get STD input results form the input code
     * @return $stdInputResult
     */
    public function getStdInputResultByInputCode($inputCode = null) {


        $q = Doctrine_Query::create()
                ->from('StdInputResult r')
                ->where('r.input_code = ?', $inputCode);

        $stdInputResults = $q->fetchArray();

        return $stdInputResults;
    }

    /**
     * Get an object of STD input result
     * @return $stdInputResult
     */
    public function getStdInputResultObject($resultCode) {

        try {

            $stdInputResult = Doctrine::getTable('StdInputResult')
                    ->find($resultCode);

            return $stdInputResult;

        } catch (Exception $e) {

            throw new Exception($e->getMessage());
        }
    }

    /**
     * Save an object of STD input result
     */
    public function saveStdInputResult() {

        try {

            $this->save();

        } catch (Exception $e) {

            throw new Exception($e->getMessage());
        }

    }

    /**
     * Delete an object of STD input result
     */
    public function deleteStdInputResult($stdInputResultList) {

        try {

            if (is_array($stdInputResultList)) {

                $q = Doctrine_Query::create()
                        ->delete('StdInputResult')
                        ->whereIn('input_result_code', $stdInputResultList );

                $numDeleted = $q->execute();
            }
        } catch (Exception $e) {

            throw new Exception($e->getMessage());
        }
    }

    /**
     * Check an existing STD input
     * @return boolean
     */
    public function isStdInputResultExist($inputResultCode, $inputResultName) {

        try {

            $q = Doctrine_Query::create()
                    ->from('StdInputResult')
                    ->where("result_description = ?", $inputResultName);

            $stdInput = $q->fetchArray();

            if (is_array($stdInput) && !empty($stdInput)) {

                if ($stdInput) {

                    if ($stdInput[0]['input_result_code'] == $inputResultCode) {
                        return false;
                    }
                }

                return true;
            }

            return false;


        } catch (Exception $e) {

            throw new Exception($e->getMessage());

        }
    }
}
