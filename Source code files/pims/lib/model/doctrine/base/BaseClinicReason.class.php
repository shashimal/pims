<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ClinicReason', 'doctrine');

/**
 * BaseClinicReason
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $patient_no
 * @property integer $episode_no
 * @property string $gp
 * @property string $court
 * @property string $bb
 * @property string $contact
 * @property string $cf
 * @property string $volantary
 * @property string $opd
 * @property string $ward
 * @property string $other
 * @property Patient $Patient
 * @property Episode $Episode
 * 
 * @method string       getPatientNo()  Returns the current record's "patient_no" value
 * @method integer      getEpisodeNo()  Returns the current record's "episode_no" value
 * @method string       getGp()         Returns the current record's "gp" value
 * @method string       getCourt()      Returns the current record's "court" value
 * @method string       getBb()         Returns the current record's "bb" value
 * @method string       getContact()    Returns the current record's "contact" value
 * @method string       getCf()         Returns the current record's "cf" value
 * @method string       getVolantary()  Returns the current record's "volantary" value
 * @method string       getOpd()        Returns the current record's "opd" value
 * @method string       getWard()       Returns the current record's "ward" value
 * @method string       getOther()      Returns the current record's "other" value
 * @method Patient      getPatient()    Returns the current record's "Patient" value
 * @method Episode      getEpisode()    Returns the current record's "Episode" value
 * @method ClinicReason setPatientNo()  Sets the current record's "patient_no" value
 * @method ClinicReason setEpisodeNo()  Sets the current record's "episode_no" value
 * @method ClinicReason setGp()         Sets the current record's "gp" value
 * @method ClinicReason setCourt()      Sets the current record's "court" value
 * @method ClinicReason setBb()         Sets the current record's "bb" value
 * @method ClinicReason setContact()    Sets the current record's "contact" value
 * @method ClinicReason setCf()         Sets the current record's "cf" value
 * @method ClinicReason setVolantary()  Sets the current record's "volantary" value
 * @method ClinicReason setOpd()        Sets the current record's "opd" value
 * @method ClinicReason setWard()       Sets the current record's "ward" value
 * @method ClinicReason setOther()      Sets the current record's "other" value
 * @method ClinicReason setPatient()    Sets the current record's "Patient" value
 * @method ClinicReason setEpisode()    Sets the current record's "Episode" value
 * 
 * @package    pims
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClinicReason extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('clinic_reason');
        $this->hasColumn('patient_no', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('episode_no', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('gp', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('court', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('bb', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('contact', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('cf', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('volantary', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('opd', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('ward', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('other', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Patient', array(
             'local' => 'patient_no',
             'foreign' => 'patient_no'));

        $this->hasOne('Episode', array(
             'local' => 'episode_no',
             'foreign' => 'episode_no'));
    }
}