<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('StdResult', 'doctrine');

/**
 * BaseStdResult
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $patient_no
 * @property integer $episode_no
 * @property string $input_code
 * @property integer $result_code
 * @property string $input_category_code
 * @property StdInput $StdInput
 * @property StdInputResult $StdInputResult
 * @property Patient $Patient
 * 
 * @method string         getPatientNo()           Returns the current record's "patient_no" value
 * @method integer        getEpisodeNo()           Returns the current record's "episode_no" value
 * @method string         getInputCode()           Returns the current record's "input_code" value
 * @method integer        getResultCode()          Returns the current record's "result_code" value
 * @method string         getInputCategoryCode()   Returns the current record's "input_category_code" value
 * @method StdInput       getStdInput()            Returns the current record's "StdInput" value
 * @method StdInputResult getStdInputResult()      Returns the current record's "StdInputResult" value
 * @method Patient        getPatient()             Returns the current record's "Patient" value
 * @method StdResult      setPatientNo()           Sets the current record's "patient_no" value
 * @method StdResult      setEpisodeNo()           Sets the current record's "episode_no" value
 * @method StdResult      setInputCode()           Sets the current record's "input_code" value
 * @method StdResult      setResultCode()          Sets the current record's "result_code" value
 * @method StdResult      setInputCategoryCode()   Sets the current record's "input_category_code" value
 * @method StdResult      setStdInput()            Sets the current record's "StdInput" value
 * @method StdResult      setStdInputResult()      Sets the current record's "StdInputResult" value
 * @method StdResult      setPatient()             Sets the current record's "Patient" value
 * 
 * @package    pims
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStdResult extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('std_result');
        $this->hasColumn('patient_no', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('episode_no', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('input_code', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('result_code', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('input_category_code', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('StdInput', array(
             'local' => 'input_code',
             'foreign' => 'input_code'));

        $this->hasOne('StdInputResult', array(
             'local' => 'result_code',
             'foreign' => 'input_result_code'));

        $this->hasOne('Patient', array(
             'local' => 'patient_no',
             'foreign' => 'patient_no'));
    }
}