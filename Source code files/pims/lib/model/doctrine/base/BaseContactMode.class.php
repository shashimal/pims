<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ContactMode', 'doctrine');

/**
 * BaseContactMode
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $patient_no
 * @property integer $email
 * @property integer $letter
 * @property integer $telephone
 * @property integer $visit
 * @property integer $no_contact
 * @property Patient $Patient
 * 
 * @method integer     getId()         Returns the current record's "id" value
 * @method string      getPatientNo()  Returns the current record's "patient_no" value
 * @method integer     getEmail()      Returns the current record's "email" value
 * @method integer     getLetter()     Returns the current record's "letter" value
 * @method integer     getTelephone()  Returns the current record's "telephone" value
 * @method integer     getVisit()      Returns the current record's "visit" value
 * @method integer     getNoContact()  Returns the current record's "no_contact" value
 * @method Patient     getPatient()    Returns the current record's "Patient" value
 * @method ContactMode setId()         Sets the current record's "id" value
 * @method ContactMode setPatientNo()  Sets the current record's "patient_no" value
 * @method ContactMode setEmail()      Sets the current record's "email" value
 * @method ContactMode setLetter()     Sets the current record's "letter" value
 * @method ContactMode setTelephone()  Sets the current record's "telephone" value
 * @method ContactMode setVisit()      Sets the current record's "visit" value
 * @method ContactMode setNoContact()  Sets the current record's "no_contact" value
 * @method ContactMode setPatient()    Sets the current record's "Patient" value
 * 
 * @package    pims
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContactMode extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contact_mode');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('patient_no', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('email', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('letter', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('telephone', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('visit', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('no_contact', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Patient', array(
             'local' => 'patient_no',
             'foreign' => 'patient_no'));
    }
}