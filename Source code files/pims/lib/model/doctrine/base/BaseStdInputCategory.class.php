<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('StdInputCategory', 'doctrine');

/**
 * BaseStdInputCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $input_category_code
 * @property string $name
 * @property string $description
 * @property Doctrine_Collection $StdInput
 * 
 * @method string              getInputCategoryCode()   Returns the current record's "input_category_code" value
 * @method string              getName()                Returns the current record's "name" value
 * @method string              getDescription()         Returns the current record's "description" value
 * @method Doctrine_Collection getStdInput()            Returns the current record's "StdInput" collection
 * @method StdInputCategory    setInputCategoryCode()   Sets the current record's "input_category_code" value
 * @method StdInputCategory    setName()                Sets the current record's "name" value
 * @method StdInputCategory    setDescription()         Sets the current record's "description" value
 * @method StdInputCategory    setStdInput()            Sets the current record's "StdInput" collection
 * 
 * @package    pims
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStdInputCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('std_input_category');
        $this->hasColumn('input_category_code', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('description', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('StdInput', array(
             'local' => 'input_category_code',
             'foreign' => 'input_category_code'));
    }
}