<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('StdInput', 'doctrine');

/**
 * BaseStdInput
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $input_code
 * @property string $input_name
 * @property string $input_description
 * @property integer $no_of_input
 * @property integer $sex
 * @property string $input_category_code
 * @property StdInputCategory $StdInputCategory
 * @property Doctrine_Collection $StdInputResult
 * @property Doctrine_Collection $StdResult
 * 
 * @method string              getInputCode()           Returns the current record's "input_code" value
 * @method string              getInputName()           Returns the current record's "input_name" value
 * @method string              getInputDescription()    Returns the current record's "input_description" value
 * @method integer             getNoOfInput()           Returns the current record's "no_of_input" value
 * @method integer             getSex()                 Returns the current record's "sex" value
 * @method string              getInputCategoryCode()   Returns the current record's "input_category_code" value
 * @method StdInputCategory    getStdInputCategory()    Returns the current record's "StdInputCategory" value
 * @method Doctrine_Collection getStdInputResult()      Returns the current record's "StdInputResult" collection
 * @method Doctrine_Collection getStdResult()           Returns the current record's "StdResult" collection
 * @method StdInput            setInputCode()           Sets the current record's "input_code" value
 * @method StdInput            setInputName()           Sets the current record's "input_name" value
 * @method StdInput            setInputDescription()    Sets the current record's "input_description" value
 * @method StdInput            setNoOfInput()           Sets the current record's "no_of_input" value
 * @method StdInput            setSex()                 Sets the current record's "sex" value
 * @method StdInput            setInputCategoryCode()   Sets the current record's "input_category_code" value
 * @method StdInput            setStdInputCategory()    Sets the current record's "StdInputCategory" value
 * @method StdInput            setStdInputResult()      Sets the current record's "StdInputResult" collection
 * @method StdInput            setStdResult()           Sets the current record's "StdResult" collection
 * 
 * @package    pims
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStdInput extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('std_input');
        $this->hasColumn('input_code', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('input_name', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('input_description', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('no_of_input', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('sex', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('input_category_code', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('StdInputCategory', array(
             'local' => 'input_category_code',
             'foreign' => 'input_category_code'));

        $this->hasMany('StdInputResult', array(
             'local' => 'input_code',
             'foreign' => 'input_code'));

        $this->hasMany('StdResult', array(
             'local' => 'input_code',
             'foreign' => 'input_code'));
    }
}