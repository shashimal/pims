<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TraceContact', 'doctrine');

/**
 * BaseTraceContact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $patient_no
 * @property integer $slip_no
 * @property string $contact_details
 * @property Patient $Patient
 * 
 * @method string       getPatientNo()       Returns the current record's "patient_no" value
 * @method integer      getSlipNo()          Returns the current record's "slip_no" value
 * @method string       getContactDetails()  Returns the current record's "contact_details" value
 * @method Patient      getPatient()         Returns the current record's "Patient" value
 * @method TraceContact setPatientNo()       Sets the current record's "patient_no" value
 * @method TraceContact setSlipNo()          Sets the current record's "slip_no" value
 * @method TraceContact setContactDetails()  Sets the current record's "contact_details" value
 * @method TraceContact setPatient()         Sets the current record's "Patient" value
 * 
 * @package    pims
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTraceContact extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trace_contact');
        $this->hasColumn('patient_no', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('slip_no', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('contact_details', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Patient', array(
             'local' => 'patient_no',
             'foreign' => 'patient_no'));
    }
}