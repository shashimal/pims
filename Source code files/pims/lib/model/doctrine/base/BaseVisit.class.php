<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Visit', 'doctrine');

/**
 * BaseVisit
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $patient_no
 * @property integer $episode_no
 * @property integer $visit_no
 * @property date $appointed_date
 * @property date $visited_date
 * @property date $next_visit_date
 * @property Patient $Patient
 * @property Episode $Episode
 * 
 * @method string  getPatientNo()       Returns the current record's "patient_no" value
 * @method integer getEpisodeNo()       Returns the current record's "episode_no" value
 * @method integer getVisitNo()         Returns the current record's "visit_no" value
 * @method date    getAppointedDate()   Returns the current record's "appointed_date" value
 * @method date    getVisitedDate()     Returns the current record's "visited_date" value
 * @method date    getNextVisitDate()   Returns the current record's "next_visit_date" value
 * @method Patient getPatient()         Returns the current record's "Patient" value
 * @method Episode getEpisode()         Returns the current record's "Episode" value
 * @method Visit   setPatientNo()       Sets the current record's "patient_no" value
 * @method Visit   setEpisodeNo()       Sets the current record's "episode_no" value
 * @method Visit   setVisitNo()         Sets the current record's "visit_no" value
 * @method Visit   setAppointedDate()   Sets the current record's "appointed_date" value
 * @method Visit   setVisitedDate()     Sets the current record's "visited_date" value
 * @method Visit   setNextVisitDate()   Sets the current record's "next_visit_date" value
 * @method Visit   setPatient()         Sets the current record's "Patient" value
 * @method Visit   setEpisode()         Sets the current record's "Episode" value
 * 
 * @package    pims
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVisit extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('visit');
        $this->hasColumn('patient_no', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('episode_no', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('visit_no', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('appointed_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('visited_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('next_visit_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Patient', array(
             'local' => 'patient_no',
             'foreign' => 'patient_no'));

        $this->hasOne('Episode', array(
             'local' => 'episode_no',
             'foreign' => 'episode_no'));
    }
}